# Import necessary libraries
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score
from sklearn.impute import SimpleImputer

# Load a sample dataset
from sklearn.datasets import load_iris
iris = load_iris()

# Create a DataFrame from the dataset
df = pd.DataFrame(data=iris.data, columns=iris.feature_names)
df['target'] = iris.target

# Introduce some missing values for demonstration
import numpy as np
df.loc[5:10, 'sepal length (cm)'] = np.nan

# Step 1: Handle Missing Data
imputer = SimpleImputer(strategy='mean')  # Replace missing values with mean
df.iloc[:, :-1] = imputer.fit_transform(df.iloc[:, :-1])

# Step 2: Train-Test Split
X = df.iloc[:, :-1]  # Features
y = df['target']  # Target variable
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Step 3: Train an AI Model
model = RandomForestClassifier(random_state=42)
model.fit(X_train, y_train)

# Step 4: Make Predictions
y_pred = model.predict(X_test)

# Step 5: Evaluate the Model
accuracy = accuracy_score(y_test, y_pred)
print(f"Model Accuracy: {accuracy:.2f}")
